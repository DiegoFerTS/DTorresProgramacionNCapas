@model ML.Producto
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">

    <br />
    <hr />
    <h2 class="text-center">Agregar producto</h2>
    <hr />

    @using (Html.BeginForm("Form", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model.IdProducto)

        <div class="row">
            <div class="col">
                <div class="row">
                    @Html.LabelFor(model => model.Nombre, new { @class = "hidden" })
                </div>
                <div class="row">
                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @placeholder = "Ingresa el nombre del producto", @style = "width: 99%" })
                </div>
            </div>

            <div class="col">
                <div class="row">
                    @Html.LabelFor(model => model.PrecioUnitario, new { @class = "hidden" })
                </div>
                <div class="row">
                    @Html.TextBoxFor(model => model.PrecioUnitario, new { @class = "form-control", @placeholder = "Ingresa el precio del producto", @style = "width: 99%" })
                </div>
            </div>

        </div><br />



        <div class="row">
            <div class="col">
                <div class="row">
                    @Html.LabelFor(model => model.Stock, new { @class = "hidden" })
                </div>
                <div class="row">
                    @Html.TextBoxFor(model => model.Stock, new { @class = "form-control", @placeholder = "Ingresa la cantidad del producto", @style = "width: 99%" })
                </div>
            </div>

            <div class="col">
                <div class="row">
                    @Html.LabelFor(model => model.Departamento, new { @class = "hidden" })
                </div>
                <div class="row">
                    @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(Model.Departamento.Departamentos, "IdDepartamento", "Nombre"), "Selecciona un departamento...", new { @class = "form-select", @style = "width: 99%" })
                </div>
            </div>


        </div><br />



        <div class="row">
            <div class="col">
                <div class="row">
                    @Html.LabelFor(model => model.Proveedor, new { @class = "hidden" })
                </div>
                <div class="row">
                    @Html.DropDownListFor(model => model.Proveedor.IdProveedor, new SelectList(Model.Proveedor.Proveedores, "IdProveedor", "Nombre"), "Selecciona un proveedor...", new { @class = "form-select", @style = "width: 99%" })
                </div>
            </div>

            <div class="col">
                <div class="row">
                    @Html.LabelFor(model => model.Descripcion, new { @class = "hidden" })
                </div>
                <div class="row">
                    @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control", @placeholder = "Ingresa la descripcion del producto", @style = "width: 99%" })
                </div>
            </div>


        </div><br />
        <br /><hr />
    
        
        <h2 class="text-center">Subir imagen</h2><hr />
    
            <center>
                <div class="row w-100">
                    <div class="m-auto">
                        @if (Model.Imagen == null || Model.Imagen == "")
                        {
                            <img id="Img" name="Img" src="https://static.thenounproject.com/png/5034901-200.png" width="200" height="200" style="border-radius: 5px;" />
                            @Html.TextBoxFor(model => model.Imagen, new { @class = "form-control form-control-sm", @style = "width: 90%;", @type = "hidden" })
                        }
                        else
                        {
                            <img id="Img" name="Img" src="data:image/*;base64,@Model.Imagen" width="200" height="200" style="border-radius: 5px;" />
                            @Html.TextBoxFor(model => model.Imagen, new { @class = "form-control form-control-sm", @style = "width: 90%;", @type = "hidden" })
                        }
                    </div>
                </div>

                <br />

                <div class="row w-100">
                    <div class="m-auto">
                        <input id="ImagenProducto" name="ImagenProducto" type="file" class="form-check-control" onchange="ValidarImagen(), VisualizarImagen(this)" />
                    </div>
                </div>
            </center>        

        <br /><hr />




        if (Model.IdProducto == 0)
        {
            <center>
                <button type="submit" class="btn btn-primary text-center">Registrar</button>
            </center>
        }
        else
        {
            <center>
                <button type="submit" class="btn btn-primary text-center">Actualizar</button>
            </center>
        }


    }

</div>


<script>
    function ValidarImagen() {
        var extencionesPermitidas = ["jpeg", "jpg", "png"];
        var extencionArchivo = document.getElementById("ImagenProducto").value.split(".").pop().toLowerCase();
        var archivoValido = false;
        for (var index in extencionesPermitidas) {
            if (extencionArchivo === extencionesPermitidas[index]) {
                archivoValido = true;
                break;
            }
        }
        if (!archivoValido) {
            alert("Las extenciones validas de archivo son: *." + extencionesPermitidas.join(", *.") + ".");
            $("#Imagen").val("");
        }
        return archivoValido;
    }

    function VisualizarImagen(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $("#Img").attr("src", e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>